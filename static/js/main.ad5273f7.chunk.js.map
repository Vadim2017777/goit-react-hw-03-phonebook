{"version":3,"sources":["componets/helpers/constants.js","componets/ContactForm/ContactForm.js","componets/Filter/Filter.js","componets/ContactListItem/ContactListItem.js","componets/ContactList/ContactList.js","componets/App.js","index.js"],"names":["INITIAL_STATE_FORM","name","number","INITIAL_STATE_APP","contacts","filter","ContactForm","state","handleInputChange","e","setState","target","value","handleSubmit","onAddContacts","props","preventDefault","reset","this","onSubmit","type","onChange","Component","Filter","TaskListItem","onRemove","onClick","defaultProps","ContactList","map","id","ContactListItem","key","App","addContacts","uuidv4","some","alert","prevState","removeContacts","contact","changeFilter","getVisibleContacts","toLowerCase","includes","localStoregeContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"qVAAMA,EAAqB,CACzBC,KAAM,GACNC,OAAQ,IAGJC,EAAoB,CACxBC,SAAU,GACVC,OAAQ,ICAWC,G,kNACnBC,M,eACKP,G,EAGLQ,kBAAoB,SAAAC,GAClB,EAAKC,SAAL,eAAiBD,EAAEE,OAAOV,KAAOQ,EAAEE,OAAOC,S,EAG5CC,aAAe,SAAAJ,GAAM,IACXK,EAAkB,EAAKC,MAAvBD,cACRL,EAAEO,iBACFF,EAAc,eAAK,EAAKP,QACxB,EAAKU,S,EAGPA,MAAQ,WACN,EAAKP,SAAL,eAAmBV,K,uDAGX,IAAD,EACkBkB,KAAKX,MAAtBN,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,0BAAMiB,SAAUD,KAAKL,cACnB,sCAEE,2BACEO,KAAK,OACLR,MAAOX,EACPA,KAAK,OACLoB,SAAUH,KAAKV,qBAGnB,wCAEE,2BACEY,KAAK,MACLR,MAAOV,EACPD,KAAK,SACLoB,SAAUH,KAAKV,qBAGnB,4BAAQY,KAAK,UAAb,oB,GA3CiCE,cCA1BC,EAJA,SAAC,GAAD,IAAGlB,EAAH,EAAGA,OAAQgB,EAAX,EAAWA,SAAX,OACb,2BAAOD,KAAK,OAAOR,MAAOP,EAAQgB,SAAUA,KCCxCG,G,MAAe,SAAC,GAAD,IAAGvB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQuB,EAAjB,EAAiBA,SAAjB,OACnB,4BACE,2BACGxB,EADH,IACUC,GAGV,4BAAQkB,KAAK,SAASM,QAASD,GAA/B,aAMWD,IAEfA,EAAaG,aAAe,CAC1BvB,SAAU,ICfZ,IAaewB,EAbK,SAAC,GAAD,IAAGxB,EAAH,EAAGA,SAAUqB,EAAb,EAAaA,SAAb,OAClB,4BACGrB,EAASyB,KAAI,gBAAGC,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,kBAAC6B,EAAD,CACEC,IAAKF,EACL7B,KAAMA,EACNC,OAAQA,EACRuB,SAAU,kBAAMA,EAASK,WCqFlBG,E,4MAvFb1B,M,eACKJ,G,EAoBL+B,YAAc,YAAuB,IAApBjC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACfE,EAAW,CACf0B,GAAIK,cACJlC,OACAC,UAEc,EAAKK,MAAMH,SAASgC,MAClC,SAAAhC,GAAQ,OAAIA,EAASH,OAASA,KASzBoC,MAAM,GAAD,OAAIpC,EAAJ,4BALV,EAAKS,UAAS,SAAA4B,GACZ,MAAO,CACLlC,SAAS,GAAD,mBAAMkC,EAAUlC,UAAhB,CAA0BA,S,EAM1CmC,eAAiB,SAAAT,GACf,EAAKpB,UAAS,SAAA4B,GACZ,MAAO,CACLlC,SAAUkC,EAAUlC,SAASC,QAAO,SAAAmC,GAAO,OAAIA,EAAQV,KAAOA,U,EAKpEW,aAAe,YAAiB,IACxBpC,EADuB,EAAbM,OACMC,MACtB,EAAKF,SAAS,CAAEL,Y,EAGlBqC,mBAAqB,WAAO,IAAD,EACI,EAAKnC,MAA1BH,EADiB,EACjBA,SAAUC,EADO,EACPA,OAClB,OAAOD,EAASC,QAAO,SAAAmC,GACrB,OAAOA,EAAQvC,KAAK0C,cAAcC,SAASvC,EAAOsC,mB,kEAnDpD,IAAME,EAAuBC,aAAaC,QAAQ,YAE9CF,GACF3B,KAAKR,SAAS,CACZN,SAAU4C,KAAKC,MAAMJ,O,yCAKRK,EAAWZ,GAAY,IAChClC,EAAac,KAAKX,MAAlBH,SACJA,IAAakC,EAAUlC,UACzB0C,aAAaK,QAAQ,WAAYH,KAAKI,UAAUhD,M,+BA2C1C,IACAC,EAAWa,KAAKX,MAAhBF,OACFgD,EAAkBnC,KAAKwB,qBAC7B,OACE,6BACE,yCACA,kBAAC,EAAD,CAAiB5B,cAAeI,KAAKgB,cACrC,wCAEChB,KAAKX,MAAMH,SAASkD,OAAS,GAC5B,oCACE,gDACA,kBAAC,EAAD,CAAQ1C,MAAOP,EAAQgB,SAAUH,KAAKuB,gBAIzCvB,KAAKX,MAAMH,SAASkD,OAAS,GAC5B,kBAAC,EAAD,CACElD,SAAUiD,EACV5B,SAAUP,KAAKqB,sB,GAhFTjB,a,MCDlBiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ad5273f7.chunk.js","sourcesContent":["const INITIAL_STATE_FORM = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nconst INITIAL_STATE_APP = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\nexport { INITIAL_STATE_FORM, INITIAL_STATE_APP };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { INITIAL_STATE_FORM } from '../helpers/constants';\r\n\r\nimport './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE_FORM,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { onAddContacts } = this.props;\r\n    e.preventDefault();\r\n    onAddContacts({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE_FORM });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onRemove: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <input type=\"text\" value={filter} onChange={onChange} />\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactListItem.module.css';\r\n\r\nconst TaskListItem = ({ name, number, onRemove }) => (\r\n  <li>\r\n    <p>\r\n      {name}:{number}\r\n    </p>\r\n\r\n    <button type=\"button\" onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default TaskListItem;\r\n\r\nTaskListItem.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nTaskListItem.propTypes = {\r\n  onRemove: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onRemove={() => onRemove(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  onRemove: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.node,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ContactListForm from './ContactForm/ContactForm';\r\nimport Filter from './Filter/Filter';\r\nimport ContactList from './ContactList/ContactList';\r\n\r\nimport { INITIAL_STATE_APP } from '../componets/helpers/constants';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...INITIAL_STATE_APP,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localStoregeContacts = localStorage.getItem('contacts');\r\n\r\n    if (localStoregeContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(localStoregeContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  addContacts = ({ name, number }) => {\r\n    const contacts = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    const overlap = this.state.contacts.some(\r\n      contacts => contacts.name === name,\r\n    );\r\n\r\n    if (!overlap) {\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, contacts],\r\n        };\r\n      });\r\n    } else alert(`${name} is already in contacts`);\r\n  };\r\n\r\n  removeContacts = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = ({ target }) => {\r\n    const filter = target.value;\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact => {\r\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactListForm onAddContacts={this.addContacts} />\r\n        <h2>Contacts</h2>\r\n\r\n        {this.state.contacts.length > 1 && (\r\n          <>\r\n            <h3>Find my contacts</h3>\r\n            <Filter value={filter} onChange={this.changeFilter} />\r\n          </>\r\n        )}\r\n\r\n        {this.state.contacts.length > 0 && (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onRemove={this.removeContacts}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componets/App';\r\n\r\nimport './componets/App';\r\n\r\nimport './base.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}